@page "/blog/{URLhandle}"
@model BeeBlog.Web.Pages.Blog.DetailsModel

@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> userManager
@inject SignInManager<IdentityUser> signInManager

@if (Model.BlogPost != null)
{
    <div class="container my-5 bg-white">
        <div class="row justify-content-center">
            <div class="col-12 col-lg-6">
                @{
                    ViewData["Title"] = Model.BlogPost.PageTitle;
                }

                <h1 class="mb-3">
                    @Model.BlogPost.Heading
                </h1>

                <div class="d-flex justify-content-between mb-3">
                    <span>@Model.BlogPost.Author</span>
                    <span>@Model.BlogPost.DateOfPublication.ToShortDateString()</span>
                </div>

                <div class="mb-3 ">
                    <span>
                        @if (signInManager.IsSignedIn(User))
                        {
                            @if (Model.Liked)
                            {
                                <a style="cursor:pointer">
                                    <i class="bi bi-hand-thumbs-up-fill"></i>
                                </a>
                            }
                            else
                            {
                                <a id="btnLike" style="cursor:pointer">
                                    <i class="bi bi-hand-thumbs-up"></i>
                                </a>
                            }
                        }
                        <span id="totalLikes"> @Model.TotalLikes</span> likes
                    </span>
                </div>

                <div class="mb-5">
                    @if (Model.BlogPost.Tags != null)
                    {
                        foreach (var tag in Model.BlogPost.Tags)
                        {
                            <a class="tag-link" href="/tag/@tag.Name">
                                <span class="badge bg-black">@tag.Name</span>
                            </a>

                        }
                    }
                </div>

                <img src="@Model.BlogPost.ImageURL" class="d-block img-fluid mb-3" />

                <div class="mb-3 blog-details">
                    @Html.Raw(Model.BlogPost.PageContent)
                </div>

                <div class="card">
                    <div class="card-header">
                        <h5>Комментарии</h5>
                        @if (signInManager.IsSignedIn(User))
                        {
                            <form method="post">
                                <div class="mb-3">
                                    <label class="form-label"></label>
                                    <input type="text" class="form-control" asp-for="BlogPostComment" />
                                    <span class="text-danger" asp-validation-for="BlogPostComment"></span>
                                </div>
                                <div class="mb-3">
                                    <button type="submit" class="btn btn-dark">Отправить</button>
                                    <input type="hidden" asp-for="BlogPostId" />
                                </div>
                            </form>
                        }
                    </div>
                    <div class="card-body">
                        @if (Model.Comments.Count > 0)
                        {
                            @foreach (var com in Model.Comments)
                            {
                                <div class="card-body mb-3">
                                    <div>@com.Description</div>
                                    <div class="d-flex justify-content-between">
                                        <span class="text-secondary">@com.UserName</span>
                                        <span class="text-secondary">@com.CreatedDate.ToShortDateString()</span>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <p>Нет ни одного комментария...</p>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    @section Scripts{
    <script>
        const btnLike = document.getElementById('btnLike');
        const totalLikesElement = document.getElementById('totalLikes');

        async function GetTotalLikes() {
            fetch('/api/blogpostlike/@Model.BlogPost.Id/totalLikes', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                }
            })
                .then(data => data.json())
                .then(result => totalLikesElement.innerHTML = result);
        }

        async function AddLike() {
            fetch('/api/blogpostlike/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                },
                body: JSON.stringify({ blogPostId: '@Model.BlogPost.Id', userId: '@userManager.GetUserId(User)' })
            }).then(() => {
                btnLike.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>';
                btnLike.removeEventListener('click', AddLike);
                GetTotalLikes();
            });
        }
        btnLike.addEventListener('click', AddLike);
    </script>
    }
}
else
{
    <h2>Публикация не найдена!</h2>
}


